# Generated by Django 3.2.8 on 2021-11-18 15:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import groceryapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('username', models.CharField(max_length=20)),
                ('standard', models.CharField(blank=True, max_length=3, null=True)),
                ('score', models.IntegerField(default=16)),
                ('first_login', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_customer', models.BooleanField(default=False, verbose_name='Is customer')),
                ('phno', models.BigIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('products', models.CharField(max_length=2555)),
                ('product_Code', models.IntegerField(unique=True)),
                ('price', models.IntegerField()),
                ('qty', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
                ('categor_id', models.IntegerField()),
                ('slug', models.SlugField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='delivery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('delivery_boy_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phno', models.IntegerField()),
                ('place', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('detail', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='delivery_assigned',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('products', models.CharField(max_length=2555)),
                ('product_order_id', models.IntegerField(unique=True)),
                ('assigned', models.CharField(max_length=255)),
                ('place_to_deliver', models.CharField(max_length=255)),
                ('delivery_time_planned', models.DateField()),
                ('amount_recived', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='orders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255)),
                ('products', models.CharField(max_length=255)),
                ('product_Code', models.IntegerField(unique=True)),
                ('address1', models.CharField(max_length=255)),
                ('address2', models.CharField(max_length=255)),
                ('address3', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=30)),
                ('place', models.CharField(max_length=25)),
                ('pincode', models.IntegerField()),
                ('pmmode', models.CharField(max_length=255)),
                ('order_status', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phno', models.IntegerField()),
                ('qty', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 14 digits allowed.", regex='^\\+?1?\\d{9,14}$')])),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.IntegerField(default=0, help_text='Number of otp sent')),
                ('logged', models.BooleanField(default=False, help_text='If otp verification got successful')),
                ('forgot', models.BooleanField(default=False, help_text='only true for forgot password')),
                ('forgot_logged', models.BooleanField(default=False, help_text='Only true if validdate otp forgot get successful')),
            ],
        ),
        migrations.CreateModel(
            name='QuantityVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to=groceryapp.models.upload_image_path_profile)),
                ('address', models.CharField(blank=True, max_length=900, null=True)),
                ('city', models.CharField(blank=True, max_length=30, null=True)),
                ('first_count', models.IntegerField(default=0, help_text='It is 0, if the user is totally new and 1 if the user has saved his standard once')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='products',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('products', models.CharField(max_length=2555)),
                ('product_Code', models.IntegerField(unique=True)),
                ('price', models.IntegerField()),
                ('weight', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groceryapp.category')),
                ('quantity_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='groceryapp.quantityvariant')),
            ],
        ),
    ]
